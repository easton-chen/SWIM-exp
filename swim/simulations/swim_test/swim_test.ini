[General]
num-rngs = 3

# save results in sqlite format
output-vector-file = ${resultdir}/${configname}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}-${runnumber}.sca
outputscalarmanager-class = "omnetpp::envir::SqliteOutputScalarManager"
outputvectormanager-class = "omnetpp::envir::SqliteOutputVectorManager"

# non-default statistics rercording
*.initialServers.param-record-as-scalar = true
*.maxServers.param-record-as-scalar = true
*.bootDelay.param-record-as-scalar = true
*.numberOfBrownoutLevels.param-record-as-scalar = true
*.evaluationPeriod.param-record-as-scalar = true
*.responseTimeThreshold.param-record-as-scalar = true
*.maxServiceRate.param-record-as-scalar = true

network = SWIM_TEST
result-dir = ../../../results/SWIM_TEST

# simulation input and duration
#*.source.interArrivalsFile = ${trace = "traces/wc_day53-r0-105m-l70.delta"}
*.source.interArrivalsFile = ${trace = "traces/wc_day53-r0-105m-l70.delta", "traces/clarknet-http-105m-l70.delta","traces/constReqTrace1","traces/constReqTrace2"}
sim-time-limit = 6301s
warmup-period = 0s

# sourcefile
*.sourceFile = ${resTrace = "traces/wc_res", "traces/cl_res","traces/constResTrace1","traces/constResTrace2"}

# adaptation loop period
*.evaluationPeriod = 60

# adaptation manager params
*.numberOfBrownoutLevels = 5
*.dimmerMargin = 0.1
*.responseTimeThreshold = 0.75s

# server pool configuration
*.maxServers = 3
*.initialServers = ${serverNum = 2}

# server config
**.server*.server.threads = 100
**.server*.server.brownoutFactor = 0.5
**.server*.server.timeout = 10s

# for plotting, use latency as iteration variable even if no iteration is needed
*.bootDelay = ${latency = 0}
#*.bootDelay = ${latency = 0, 60, 120, 180, 240} # deterministic boot times
#*.bootDelay = truncnormal( ${latency = 0, 60, 120, 180, 240}, ${stddev=($latency)/10} ) # random boot times

# service time configuration
**.server*.server.serviceTime = truncnormal(0.03s,0.03s)
**.server*.server.lowFidelityServiceTime = truncnormal(0.001s,0.001s)

# this is used for the SEAMS'17 CobRA-PLA utility function
*.maxServiceRate = 1 / 0.04452713 # typically the inverse of the normal service time

[Config Reactive]
*.adaptationManagerType = "ReactiveAdaptationManager"

[Config Reactive2]
*.adaptationManagerType = "ReactiveAdaptationManager2"

[Config Test]
*.adaptationManagerType = "TestAdaptationManager"
